<?xml version="1.0"?>
<!-- Hemera - Intelligent System (http://hemerais.bertrand-benoit.net)
     Copyright (C) 2010-2015 Bertrand Benoit <hemerais@bertrand-benoit.net>

     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 3 of the License, or
     (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, see http://www.gnu.org/licenses
     or write to the Free Software Foundation,Inc., 51 Franklin Street,
     Fifth Floor, Boston, MA 02110-1301  USA
-->
<project name="Hemera - Intelligent System - Web module" default="build" basedir=".">
<!-- Constants definition -->
  <property environment="env"/>
  <property name="root" value="${basedir}/.."/>
  <property name="src" value="${root}/WEB-INF/src"/>
  <property name="bin" value="${root}/WEB-INF/classes"/>
  <property name="build" value="${root}/build"/>
  <property name="warFile" value="${build}/Hemera.war"/>
	
  <!-- Assuming Hemera main project is in same directory. -->
  <property name="hemeraMain" value="${root}/../Hemera"/>

<!-- Initialization -->
  <target name="init">
    <mkdir dir="${build}"/>
  </target>

  <target name="environmentCheck" description="Ensures Hemera Web Services third-party are well installed">
  	<!-- Checks if Hemera main is found. -->
  	<condition property="HemeraMainfound">
  	  <available file="${hemeraMain}" type="dir" />
  	</condition>
  	<fail unless="HemeraMainfound" message="Unable to find Hemera main project (${hemeraMain} not found). For [un]deploy, you must install WebModule project in the same parent directory than Hemera main project." />
  	
	<!-- Loads Hemera configuration file. -->
	<property file="${hemeraMain}/config/hemera.conf" />

    <!-- Defines needed classpath (including catalina-ant, struts and other needed Third-party applications. -->
    <path id="classpath">
      <fileset dir="${root}/WEB-INF/lib/" includes="*.jar" excludes="catalina-ant.jar" />
    </path>
    
    <taskdef resource="org/apache/catalina/ant/antlib.xml"
              classpath="${root}/WEB-INF/lib/catalina-ant.jar"/>
  </target>

<!-- Cleaning -->
  <target name="clean">
    <delete file="${warFile}"/>
  	<delete dir="${bin}" />
  </target>

<!-- Main targets -->
  <target name="all" depends="deploy" />

<!-- Source code management targets -->
  <target name="compilation" depends="environmentCheck" description="Performs the compilation">
    <mkdir dir="${bin}"/>

    <javac srcdir="${src}"
      destdir="${bin}"
      source="1.6"
      target="1.6"
      failonerror="true"
      fork="false">
        <classpath refid="classpath"/>
        <compilerarg compiler="org.eclipse.jdt.core.JDTCompilerAdapter" line="-warn:deprecation -g -verbose -1.6"/>
    </javac>

  	<!-- Copies resources files. -->
  	<copy todir="${bin}">
  	  <fileset dir="${src}" defaultexcludes="true" includes="**/*.properties,**/*.xml" />
  	</copy>
  </target>

  <target name="build" depends="init,compilation" description="Generates war file">
    <delete file="${warFile}"/>
    <jar destfile="${warFile}"
      index="false"
      filesonly="false">
        <fileset dir="${root}" defaultexcludes="true" includes="LICENSE*.txt,WEB-INF/**,pages/**" excludes="WEB-INF/src/**" />
    </jar>
  </target>

<!-- Web Service management -->
  <target name="deploy" depends="environmentCheck,build" description="Deploys Hemera war file on defined Tomcat server">
    <deploy url="${hemera.web.tomcat.manager.url}" username="${hemera.web.tomcat.username}"
       password="${hemera.web.tomcat.password}" path="/Hemera" war="${warFile}"/>
  </target>
  
  <target name="undeploy" depends="environmentCheck,build" description="Undeploys Hemera war file on defined Tomcat server">
    <undeploy url="${hemera.web.tomcat.manager.url}" username="${hemera.web.tomcat.username}"
       password="${hemera.web.tomcat.password}" path="/Hemera"/>
  </target>

</project>
