#!/bin/bash
#
# Hemera - Intelligent System (https://sourceforge.net/projects/hemerais)
# Copyright (C) 2010-2011 Bertrand Benoit <projettwk@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see http://www.gnu.org/licenses
# or write to the Free Software Foundation,Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301  USA
#
# Version: 1.0
# Description: French Internationalized Hemera strings.
#
# This script must NOT be directly called.

## General constants
## Hemera modes.
HEMERA_MODE_NORMAL_I18N="normal"
HEMERA_MODE_SECURITY_I18N="sécurité"
HEMERA_MODE_PARROT_I18N="perroquet"

## Commands.
# Internationalized command patterns.
# Each command patterns must fit the syntax (take care of the space after/before parenthesis): ( "<pattern1>" ["<pattern2>" ... "<patternN>"] )
# These patterns will be directly used with =~ GNU/Bash binary operator;
#  so, corresponding syntax must be extended regular expression like in regex3.
# Each pattern must correspond to only ONE word, characters with accent are allowed.
# Each pattern must be put in double quotes.
# Several patterns can be specified for the same command, they must be space separated.
# e.g. for the command SAY, let's say we want "say" and something beginning by "rep" (like repeat), the format will so be:
# ( "say" "rep.*" )
MODE_CMD_PATTERN_I18N=( "mode" )
SAY_CMD_PATTERN_I18N=( "dire" "dis" "répète" "répéter" )
SEARCH_CMD_PATTERN_I18N=( "recherche" "rechercher" )
PAUSE_CMD_PATTERN_I18N=( "pause" "attend" "attendre" )
CONTINUE_CMD_PATTERN_I18N=( "continue" "continuer" "poursuivre" )
STOP_CMD_PATTERN_I18N=( "arrêt" "arrêter" "stop" )

# Information following successfull command recognition.
MODE_CMD_BAD_USE_I18N="Activation du mode"

# Command recognition error or bad use.
# Sometimes, variables are specified in strings, they will be replaced by corresponding value; in this case (and ONLY this one)
#  all following characters must be escaped: $'
MODE_CMD_BAD_USE_I18N="La commande mode nécessite un et un seul argument"
MODE_CMD_BAD_MODE_I18N="Le mode \$badMode n\'est pas supporté. Les modes suivants le sont : \$supportedMode"
SAY_CMD_BAD_USE_I18N="La commande dire nécessite au moins un argument"
SEARCH_CMD_BAD_USE_I18N="La commande rechercher nécessite au moins un argument"
PAUSE_CMD_BAD_USE_I18N="La commande pause ne prend pas d'argument"
CONTINUE_CMD_BAD_USE_I18N="La commande continue ne prend pas d'argument"
STOP_CMD_BAD_USE_I18N="La commande stop ne prend pas d'argument"

NOT_RECOGNIZED_COMMAND_I18N="Commande non reconnue !"
NOT_FOUND_COMMAND_I18N="La commande suivante est incomprise : \$notFoundCommand"
